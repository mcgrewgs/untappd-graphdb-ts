// Generated by https://quicktype.io

export interface UntappdBeersResponseWithMetadata {
    meta: Meta;
    notifications: any[];
    response: UntappdBeersResponse;
}

export interface Meta {
    code: number;
    init_time: Time;
    response_time: Time;
}

export interface Time {
    measure: string;
    time: number;
}

export interface UntappdBeersResponse {
    beers: Beers;
    brewery_id: boolean;
    container_id: boolean;
    country_id: boolean;
    dates: Dates;
    is_multi_type: boolean;
    is_search: boolean;
    pagination: Pagination;
    rating_score: boolean;
    region_id: boolean;
    sort: string;
    sort_key: string;
    sort_name: string;
    total_count: number;
    type_id: boolean;
}

export interface Beers {
    count: number;
    items: BeerWithRating[];
    sort_english: string;
    sort_name: string;
}

export interface BeerWithRating {
    beer: Beer;
    brewery: Brewery;
    count: number;
    first_checkin_id: number;
    first_created_at: string;
    first_had: string;
    rating_score: number;
    recent_checkin_id: number;
    recent_created_at: string;
    recent_created_at_timezone: string;
    user_auth_rating_score: number;
}

export interface Beer {
    beer_abv: number;
    beer_description: string;
    beer_ibu: number;
    beer_label: string;
    beer_name: string;
    beer_slug: string;
    beer_style: string;
    bid: number;
    created_at: string;
    has_had: boolean;
    rating_count: number;
    rating_score: number;
}

export interface Brewery {
    brewery_active: number;
    brewery_id: number;
    brewery_label: string;
    brewery_name: string;
    brewery_page_url: string;
    brewery_slug: string;
    brewery_type: BreweryType;
    contact: Contact;
    country_name: CountryName;
    location: Location;
}

export enum BreweryType {
    BrewPub = "Brew Pub",
    Cidery = "Cidery",
    MacroBrewery = "Macro Brewery",
    MicroBrewery = "Micro Brewery",
    RegionalBrewery = "Regional Brewery",
}

export interface Contact {
    facebook: string;
    instagram: string;
    twitter: string;
    url: string;
}

export enum CountryName {
    Germany = "Germany",
    Ireland = "Ireland",
    Sweden = "Sweden",
    UnitedStates = "United States",
}

export interface Location {
    brewery_city: string;
    brewery_state: string;
    lat: number;
    lng: number;
}

export interface Dates {
    end_date: boolean;
    first_checkin_date: string;
    start_date: boolean;
    tzOffset: string;
}

export interface Pagination {
    max_id: boolean;
    next_url: string;
    offset: number;
}
