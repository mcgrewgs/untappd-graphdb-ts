// Generated by https://quicktype.io

export interface UntappdBeerCheckinsResponseWithMetadata {
    meta: Meta;
    notifications: any[];
    response: UntappdBeerCheckinsResponse;
}

export interface Meta {
    code: number;
    init_time: Time;
    response_time: Time;
}

export interface Time {
    measure: string;
    time: number;
}

export interface UntappdBeerCheckinsResponse {
    checkins: Checkins;
    pagination: Pagination;
}

export interface Checkins {
    count: number;
    items: CheckinsItem[];
}

export interface CheckinsItem {
    badges: Badges;
    beer: Beer;
    brewery: Brewery;
    checkin_comment: string;
    checkin_id: number;
    comments: Comments;
    created_at: string;
    media: Media;
    rating_score: number;
    source: Source;
    toasts: Comments;
    user: FluffyUser;
    venue: any[] | VenueClass;
}

export interface Badges {
    count: number;
    items: BadgesItem[];
    retro_status?: boolean;
}

export interface BadgesItem {
    badge_description: string;
    badge_id: number;
    badge_image: VenueIcon;
    badge_name: string;
    created_at: string;
    user_badge_id: number;
}

export interface VenueIcon {
    lg: string;
    md: string;
    sm: string;
}

export interface Beer {
    beer_abv: number;
    beer_active: number;
    beer_description: string;
    beer_ibu: number;
    beer_label: string;
    beer_name: BeerName;
    beer_slug: BeerSlug;
    beer_style: BeerStyle;
    bid: number;
    has_had: boolean;
}

export enum BeerName {
    DarkHollow = "Dark Hollow",
}

export enum BeerSlug {
    BlueMountainBreweryDarkHollow = "blue-mountain-brewery-dark-hollow",
}

export enum BeerStyle {
    StoutImperialDouble = "Stout - Imperial / Double",
}

export interface Brewery {
    brewery_active: number;
    brewery_id: number;
    brewery_label: string;
    brewery_name: BreweryName;
    brewery_page_url: BreweryPageURL;
    brewery_slug: BrewerySlug;
    contact: BreweryContact;
    country_name: CountryName;
    location: BreweryLocation;
}

export enum BreweryName {
    BlueMountainBrewery = "Blue Mountain Brewery",
}

export enum BreweryPageURL {
    BlueMountainBrewery = "/BlueMountainBrewery",
}

export enum BrewerySlug {
    BlueMountainBrewery = "blue-mountain-brewery",
}

export interface BreweryContact {
    facebook: string;
    twitter: Twitter;
    url: string;
}

export enum Twitter {
    Bluemtnbrewery = "bluemtnbrewery",
}

export enum CountryName {
    UnitedStates = "United States",
}

export interface BreweryLocation {
    brewery_city: BreweryCity;
    brewery_state: State;
    lat: number;
    lng: number;
}

export enum BreweryCity {
    Afton = "Afton",
}

export enum State {
    Everywhere = "Everywhere",
    Va = "VA",
}

export interface Comments {
    count: number;
    items: CommentsItem[];
    total_count: number;
    auth_toast?: boolean | null;
}

export interface CommentsItem {
    created_at: string;
    like_id: number;
    like_owner: boolean;
    uid: number;
    user: PurpleUser;
}

export interface PurpleUser {
    account_type: AccountType;
    bio: string;
    brewery_details: any[];
    first_name: string;
    last_name: string;
    location: string;
    relationship: Relationship;
    uid: number;
    user_avatar: string;
    user_name: string;
    venue_details: any[];
}

export enum AccountType {
    User = "user",
}

export enum Relationship {
    None = "none",
}

export interface Media {
    count: number;
    items: MediaItem[];
}

export interface MediaItem {
    photo: Photo;
    photo_id: number;
}

export interface Photo {
    photo_img_lg: string;
    photo_img_md: string;
    photo_img_og: string;
    photo_img_sm: string;
}

export interface Source {
    app_name: AppName;
    app_website: string;
}

export enum AppName {
    UntappdForAndroidV2 = "Untappd for Android - (V2)",
    UntappdForIPhoneV2 = "Untappd for iPhone - (V2)",
    UntappdWeb = "Untappd Web",
}

export interface FluffyUser {
    bio: Bio;
    first_name: string;
    is_private: number;
    is_supporter: number;
    last_name: string;
    location: string;
    relationship: null;
    uid: number;
    url: string;
    user_avatar: string;
    user_name: string;
}

export enum Bio {
    BBCraftBeerGirlKatsCraftsWineInsta = "B&B Craft Beer Girl, Kats_Crafts&Wine -- Insta",
    BeerSure = "Beer? Sure!",
    Empty = "",
    The20LovibondAndUpSalud = "20Â° Lovibond and up.  Salud!",
}

export interface VenueClass {
    categories: Categories;
    contact: VenueContact;
    foursquare: Foursquare;
    is_verified: boolean;
    location: VenueLocation;
    parent_category_id: ParentCategoryID;
    primary_category: PrimaryCategory;
    primary_category_key: PrimaryCategory;
    venue_icon: VenueIcon;
    venue_id: number;
    venue_name: string;
    venue_slug: string;
}

export interface Categories {
    count: number;
    items: CategoriesItem[];
}

export interface CategoriesItem {
    category_id: string;
    category_key: string;
    category_name: string;
    is_primary: boolean;
}

export interface VenueContact {
    twitter: string;
    venue_url: string;
}

export interface Foursquare {
    foursquare_id: string;
    foursquare_url: string;
}

export interface VenueLocation {
    lat: number;
    lng: number;
    venue_address: string;
    venue_city: string;
    venue_country: CountryName;
    venue_state: State;
}

export enum ParentCategoryID {
    The4D4B7105D754A06374D81259 = "4d4b7105d754a06374d81259",
    The4D4B7105D754A06376D81259 = "4d4b7105d754a06376d81259",
    The4D4B7105D754A06378D81259 = "4d4b7105d754a06378d81259",
    The4D4B7105D754A06379D81259 = "4d4b7105d754a06379d81259",
    The4E67E38E036454776Db1Fb3A = "4e67e38e036454776db1fb3a",
}

export enum PrimaryCategory {
    Food = "Food",
    NightlifeSpot = "Nightlife Spot",
    Residence = "Residence",
    ShopService = "Shop & Service",
    TravelTransport = "Travel & Transport",
}

export interface Pagination {
    max_id: number;
    next_url: string;
    since_url: string;
}
